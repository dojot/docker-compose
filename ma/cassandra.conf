CREATE KEYSPACE serviceregistry WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '2'};
CREATE TABLE serviceregistry.registry (context text, date timestamp, hostname text, microservice text, port int, version text, PRIMARY KEY((microservice, version), hostname));

CREATE KEYSPACE logging WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '2'};
USE logging;
CREATE TABLE configurationlogging (id varchar, configuration varchar, description varchar, result varchar, PRIMARY KEY (id));
CREATE TABLE debugcomponent (transactionid varchar, fieldSizes varchar, preobfuscationParam varchar, date timestamp, PRIMARY KEY (transactionid));
CREATE TABLE debugcryptochannel (transactionid varchar, ivComponentToServer varchar, ivServerToComponent varchar, keyComponentToServer varchar, keyServerToComponent varchar, provider varchar, sessionId varchar, tagLen int, date timestamp, PRIMARY KEY (transactionid));
CREATE TABLE debugencrypteddata (transactionid varchar, encryptedData varchar, PRIMARY KEY (transactionid));
CREATE TABLE debugpageprotection (transactionid varchar, data varchar, date timestamp, PRIMARY KEY (transactionid));
CREATE TABLE debugtransaction (transactionid varchar, client varchar, component varchar, dateClient varchar, session varchar, type varchar, date timestamp, PRIMARY KEY (transactionid));
CREATE TABLE debugvariablemap (transactionid varchar, data varchar, key varchar, PRIMARY KEY (transactionid));
CREATE TABLE logging (id text, component text, date timestamp, details text, level text, node text, username text, PRIMARY KEY (id));
CREATE TABLE logging.loggingtransaction (id text, date timestamp, details text, level text, node text, transaction text, PRIMARY KEY (id));

INSERT INTO configurationlogging (id, configuration, description, result) VALUES ('DELETE_OLD_LOGS', 'DELETE_OLD_LOGS', 'Time in days to exclude system logs.', '15');
